{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class PaymentService {\n  constructor(http, activateRoute) {\n    this.http = http;\n    this.activateRoute = activateRoute;\n    this.apiUrl = 'http://localhost:5145/Payment';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    };\n  }\n  makePayment(payment) {\n    console.log(\"Order: \" + JSON.stringify(payment));\n    return this.http.post(this.apiUrl, payment, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Client-side error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      errorMessage = `Server-side error: ${error.status} ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n  static {\n    this.ɵfac = function PaymentService_Factory(t) {\n      return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PaymentService,\n      factory: PaymentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","PaymentService","constructor","http","activateRoute","apiUrl","httpOptions","headers","makePayment","payment","console","log","JSON","stringify","post","pipe","handleError","error","errorMessage","ErrorEvent","message","status","Error","i0","ɵɵinject","i1","HttpClient","i2","ActivatedRoute","factory","ɵfac","providedIn"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Services\\payment.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Payment } from '../Models/Payment';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n  apiUrl: string = 'http://localhost:5145/Payment';\n  httpOptions = { headers: new HttpHeaders({ 'Content-type': 'application/json' }) };\n\n  constructor(private http: HttpClient, private activateRoute: ActivatedRoute) { }\n\n  makePayment(payment: Payment): Observable<any> {\n    console.log(\"Order: \" + JSON.stringify(payment));\n    return this.http.post<any>(this.apiUrl, payment, this.httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Client-side error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      errorMessage = `Server-side error: ${error.status} ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n"],"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAIjF,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;;AAKzD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB,EAAUC,aAA6B;IAAvD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAH3D,KAAAC,MAAM,GAAW,+BAA+B;IAChD,KAAAC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAIT,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;EAEH;EAE/EU,WAAWA,CAACC,OAAgB;IAC1BC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;IAChD,OAAO,IAAI,CAACN,IAAI,CAACW,IAAI,CAAM,IAAI,CAACT,MAAM,EAAEI,OAAO,EAAE,IAAI,CAACH,WAAW,CAAC,CAC/DS,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACiB,WAAW,CAAC,CAAC;EACvC;EAEQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAG,sBAAsBD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;KAC3D,MAAM;MACL;MACAF,YAAY,GAAG,sBAAsBD,KAAK,CAACI,MAAM,IAAIJ,KAAK,CAACG,OAAO,EAAE;;IAEtEV,OAAO,CAACO,KAAK,CAACC,YAAY,CAAC;IAC3B,OAAOlB,UAAU,CAAC,MAAM,IAAIsB,KAAK,CAACJ,YAAY,CAAC,CAAC;EAClD;;;uBAvBWjB,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAd3B,cAAc;MAAA4B,OAAA,EAAd5B,cAAc,CAAA6B,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}