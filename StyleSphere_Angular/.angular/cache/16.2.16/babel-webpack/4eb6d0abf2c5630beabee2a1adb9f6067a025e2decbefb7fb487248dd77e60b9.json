{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../Services/user.service\";\nimport * as i3 from \"@angular/router\";\nexport class UserregisterComponent {\n  constructor(fb, service, router) {\n    this.fb = fb;\n    this.service = service;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      userId: [0],\n      userName: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n      status: ['active'],\n      userRole: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  onSubmit(form) {\n    this.userForm = form;\n    console.log(this.userForm.value);\n    if (this.userForm.valid) {\n      const formValues = this.userForm.value;\n      this.user = {\n        userId: formValues.userId,\n        userName: formValues.userName,\n        email: formValues.email,\n        phoneNumber: formValues.phoneNumber,\n        status: \"active\",\n        userRole: formValues.userRole,\n        password: formValues.password\n      };\n      this.service.UserRegistration(this.user).subscribe(response => {\n        console.log('User Registration successful!', response);\n        this.router.navigate(['userLogin']);\n      }, error => {\n        console.error('Registration failed', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function UserregisterComponent_Factory(t) {\n      return new (t || UserregisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserregisterComponent,\n      selectors: [[\"app-userregister\"]],\n      decls: 48,\n      vars: 0,\n      consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"userForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"name\", \"userName\", \"ngModel\", \"\", 1, \"form-control\"], [\"userName\", \"ngModel\"], [\"for\", \"email\"], [\"name\", \"email\", \"ngModel\", \"\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", 1, \"form-control\"], [\"password\", \"ngModel\"], [\"for\", \"phonenumber\"], [\"name\", \"phoneNumber\", \"ngModel\", \"\", 1, \"form-control\"], [\"phonenumber\", \"ngModel\"], [\"for\", \"status\"], [\"name\", \"active\", \"value\", \"active\", \"ngModel\", \"active\", \"readonly\", \"\", 1, \"form-control\"], [\"status\", \"ngModel\"], [\"for\", \"userRole\"], [\"ngModel\", \"\", \"name\", \"userRole\", \"required\", \"\", 1, \"form-control\"], [\"userRole\", \"ngModel\"], [\"value\", \"seller\"], [\"value\", \"customer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function UserregisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r7 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UserregisterComponent_Template_form_ngSubmit_1_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(ctx.onSubmit(_r0));\n          });\n          i0.ɵɵelementStart(3, \"div\")(4, \"h1\");\n          i0.ɵɵtext(5, \"User Registration\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n          i0.ɵɵtext(8, \"User Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"br\")(10, \"input\", 5, 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"br\")(16, \"input\", 8, 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 10);\n          i0.ɵɵtext(20, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"br\")(22, \"input\", 11, 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 13);\n          i0.ɵɵtext(26, \"Phone Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"br\")(28, \"input\", 14, 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 3)(31, \"label\", 16);\n          i0.ɵɵtext(32, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"br\")(34, \"input\", 17, 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 3)(37, \"label\", 19);\n          i0.ɵɵtext(38, \"User Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(39, \"br\");\n          i0.ɵɵelementStart(40, \"select\", 20, 21)(42, \"option\", 22);\n          i0.ɵɵtext(43, \"Seller\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"option\", 23);\n          i0.ɵɵtext(45, \"Customer\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(46, \"button\", 24);\n          i0.ɵɵtext(47, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","UserregisterComponent","constructor","fb","service","router","ngOnInit","userForm","group","userId","userName","required","minLength","email","phoneNumber","maxLength","status","userRole","password","onSubmit","form","console","log","value","valid","formValues","user","UserRegistration","subscribe","response","navigate","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","Router","selectors","decls","vars","consts","template","UserregisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UserregisterComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r7","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\User\\userregister\\userregister.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\User\\userregister\\userregister.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../Models/User';\nimport { UserService } from '../../Services/user.service';\n\n@Component({\n  selector: 'app-userregister',\n  templateUrl: './userregister.component.html',\n  styleUrls: ['./userregister.component.css']\n})\nexport class UserregisterComponent implements OnInit {\n  userForm: FormGroup;\n  user: User;\n\n  constructor(private fb: FormBuilder, private service: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userForm = this.fb.group({\n      userId: [0],\n      userName: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n      status: ['active'],\n      userRole: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    })\n  }\n\n\n  onSubmit(form:any): void {\n    this.userForm=form;\n    console.log(this.userForm.value)\n    if (this.userForm.valid) {\n      const formValues = this.userForm.value;\n      this.user = {\n        userId:formValues.userId,\n        userName: formValues.userName,\n        email: formValues.email,\n        phoneNumber: formValues.phoneNumber,\n        status: \"active\",\n        userRole: formValues.userRole,\n        password: formValues.password\n      };\n\n      this.service.UserRegistration(this.user).subscribe(\n        response => {\n          console.log('User Registration successful!', response);\n          this.router.navigate(['userLogin']);\n        },\n        error => {\n          console.error('Registration failed', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"container\">\n    <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n        <div>\n            <h1>User Registration</h1>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"userName\">User Name</label><br>\n            <input #userName=\"ngModel\"  name=\"userName\" class=\"form-control\" ngModel=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label><br>\n            <input #email=\"ngModel\"   name=\"email\" class=\"form-control\" ngModel=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label><br>\n            <input #password=\"ngModel\" type=\"password\"  name=\"password\" class=\"form-control\" ngModel=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"phonenumber\">Phone Number</label><br>\n            <input #phonenumber=\"ngModel\"  name=\"phoneNumber\" class=\"form-control\" ngModel=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"status\">Status</label><br>\n            <input #status=\"ngModel\"  name=\"active\" class=\"form-control\" value=\"active\" ngModel=\"active\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"userRole\">User Role</label><br>\n            <select ngModel name=\"userRole\" #userRole=\"ngModel\" required class=\"form-control\">\n                <option value=\"seller\">Seller</option>\n                <option value=\"customer\">Customer</option>\n            </select>\n        </div>\n        \n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}