{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    };\n  }\n  UserRegistration(user) {\n    console.log(user);\n    return this.http.post(this.apiUrl, user, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  handleError(error) {\n    let errorMessage = \"\";\n    errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","UserService","constructor","http","httpOptions","headers","UserRegistration","user","console","log","post","apiUrl","pipe","handleError","getAllUsers","get","error","errorMessage","status","statusText","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../Models/User';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  apiUrl : \"http://localhost:5145/User\";\n\n  httpOptions = {headers: new HttpHeaders({'Content-type':'application/json'})};\n  \n  constructor(private http:HttpClient) { }\n\n  UserRegistration(user:User):Observable<User>{\n    console.log(user);\n    return this.http.post<User>(this.apiUrl,user,this.httpOptions).pipe(catchError(this.handleError));\n  }\n\n  getAllUsers():Observable<User>{\n    return this.http.get<User>(this.apiUrl);\n  }\n  handleError(error:HttpErrorResponse){\n    let errorMessage=\"\";\n    errorMessage=error.status +'\\n'+error.statusText+'\\n'+error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n"],"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAGjF,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,WAAW,GAAG;MAACC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAC,cAAc,EAAC;MAAkB,CAAC;IAAC,CAAC;EAEtC;EAEvCQ,gBAAgBA,CAACC,IAAS;IACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAO,IAAI,CAACC,MAAM,EAACJ,IAAI,EAAC,IAAI,CAACH,WAAW,CAAC,CAACQ,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACnG;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAO,IAAI,CAACJ,MAAM,CAAC;EACzC;EACAE,WAAWA,CAACG,KAAuB;IACjC,IAAIC,YAAY,GAAC,EAAE;IACnBA,YAAY,GAACD,KAAK,CAACE,MAAM,GAAE,IAAI,GAACF,KAAK,CAACG,UAAU,GAAC,IAAI,GAACH,KAAK,CAACA,KAAK;IACjEI,KAAK,CAACH,YAAY,CAAC;IACnB,OAAOjB,UAAU,CAACiB,YAAY,CAAC;EACjC;;;uBApBWhB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXvB,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}