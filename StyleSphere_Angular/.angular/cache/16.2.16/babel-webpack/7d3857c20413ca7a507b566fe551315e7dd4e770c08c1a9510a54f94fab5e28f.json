{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserloginComponent } from './userlogin/userlogin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { SellerDasbhoardComponent } from './seller-dasbhoard/seller-dasbhoard.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { CustomerComponent } from './customer/customer.component';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\nimport { XsrfInterceptor } from './xsrf.interceptor';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport * as i0 from \"@angular/core\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [\n      // Interceptor Registration \n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true // allows multiple interceptors to be registered.\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: XsrfInterceptor,\n        multi: true // allows multiple interceptors to be registered.\n      }],\n\n      imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, FormsModule, HttpClientModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, UserloginComponent, SellerDasbhoardComponent, PagenotfoundComponent, CustomerComponent, UserRegistrationComponent, ProductDetailsComponent],\n    imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, FormsModule, HttpClientModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppRoutingModule","AppComponent","UserloginComponent","FormsModule","ReactiveFormsModule","HTTP_INTERCEPTORS","HttpClientModule","SellerDasbhoardComponent","PagenotfoundComponent","AuthInterceptor","CustomerComponent","UserRegistrationComponent","XsrfInterceptor","ProductDetailsComponent","AppModule","bootstrap","provide","useClass","multi","imports","declarations"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserloginComponent } from './userlogin/userlogin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { SellerDasbhoardComponent } from './seller-dasbhoard/seller-dasbhoard.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { CustomerComponent } from './customer/customer.component';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\nimport { XsrfInterceptor } from './xsrf.interceptor';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserloginComponent,\n    SellerDasbhoardComponent,\n    PagenotfoundComponent,\n    CustomerComponent,\n    UserRegistrationComponent,\n    ProductDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n\n  providers: [\n    // Interceptor Registration \n    { \n      provide:HTTP_INTERCEPTORS,    // interceptor is provided using the HTTP_INTERCEPTORS injection token.\n      useClass : AuthInterceptor,\n      multi: true                   // allows multiple interceptors to be registered.\n      },\n      { \n        provide:HTTP_INTERCEPTORS,    // interceptor is provided using the HTTP_INTERCEPTORS injection token.\n        useClass : XsrfInterceptor,\n        multi: true                   // allows multiple interceptors to be registered.\n        },\n      \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,iBAAiB,EAAcC,gBAAgB,QAAQ,sBAAsB;AACtF,SAASC,wBAAwB,QAAQ,+CAA+C;AACxF,SAASC,qBAAqB,QAAQ,uCAAuC;AAC7E,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,yBAAyB,QAAQ,iDAAiD;AAC3F,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,uBAAuB,QAAQ,6CAA6C;;AAoCrF,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRd,YAAY;IAAA;EAAA;;;iBAdb;MACT;MACA;QACEe,OAAO,EAACX,iBAAiB;QACzBY,QAAQ,EAAGR,eAAe;QAC1BS,KAAK,EAAE,IAAI,CAAmB;OAC7B,EACD;QACEF,OAAO,EAACX,iBAAiB;QACzBY,QAAQ,EAAGL,eAAe;QAC1BM,KAAK,EAAE,IAAI,CAAmB;OAC7B,CAEN;;MAAAC,OAAA,GApBCpB,aAAa,EACbC,gBAAgB,EAChBI,mBAAmB,EACnBD,WAAW,EACXG,gBAAgB;IAAA;EAAA;;;2EAmBPQ,SAAS;IAAAM,YAAA,GAhClBnB,YAAY,EACZC,kBAAkB,EAClBK,wBAAwB,EACxBC,qBAAqB,EACrBE,iBAAiB,EACjBC,yBAAyB,EACzBE,uBAAuB;IAAAM,OAAA,GAGvBpB,aAAa,EACbC,gBAAgB,EAChBI,mBAAmB,EACnBD,WAAW,EACXG,gBAAgB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}