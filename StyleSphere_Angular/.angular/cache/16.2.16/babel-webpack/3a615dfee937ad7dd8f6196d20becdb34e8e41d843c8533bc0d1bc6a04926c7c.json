{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction UserdetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"h2\");\n    i0.ɵɵtext(4, \"User Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"p\", 5)(7, \"strong\");\n    i0.ɵɵtext(8, \"User Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 5)(11, \"strong\");\n    i0.ɵɵtext(12, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\", 5)(15, \"strong\");\n    i0.ɵɵtext(16, \"Phone Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p\", 5)(19, \"strong\");\n    i0.ɵɵtext(20, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"p\", 5)(23, \"strong\");\n    i0.ɵɵtext(24, \"User Role:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.userName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.email, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.phoneNumber, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.status, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.userRole, \"\");\n  }\n}\nexport class UserdetailsComponent {\n  constructor(_user, activeroute) {\n    this._user = _user;\n    this.activeroute = activeroute;\n  }\n  ngOnInit() {\n    this.Id = parseInt(sessionStorage.getItem('userid') || '0', 10); // if session value is null assigns it to 0, and 10 is to use it as base for the conversion\n    // let Id=this.activeroute.snapshot.params['id'];\n    console.log(\"From UserDetails Component ==> \" + this.Id);\n    this._user.getUserById(this.Id).subscribe(data => {\n      this.user = data;\n      console.log(data);\n    });\n  }\n  static {\n    this.ɵfac = function UserdetailsComponent_Factory(t) {\n      return new (t || UserdetailsComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserdetailsComponent,\n      selectors: [[\"app-userdetails\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"container mt-4\", 4, \"ngIf\"], [1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-text\"]],\n      template: function UserdetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, UserdetailsComponent_div_0_Template, 26, 5, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.user);\n        }\n      },\n      dependencies: [i3.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","user","userName","email","phoneNumber","status","userRole","UserdetailsComponent","constructor","_user","activeroute","ngOnInit","Id","parseInt","sessionStorage","getItem","console","log","getUserById","subscribe","data","ɵɵdirectiveInject","i1","UserService","i2","ActivatedRoute","selectors","decls","vars","consts","template","UserdetailsComponent_Template","rf","ctx","ɵɵtemplate","UserdetailsComponent_div_0_Template","ɵɵproperty"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\User\\userdetails\\userdetails.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\User\\userdetails\\userdetails.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/Models/User';\nimport { UserService } from 'src/app/Services/user.service';\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  user: User;\n  Id:number;\n  constructor(private _user:UserService,private activeroute:ActivatedRoute){}\n\n  ngOnInit(){\n    this.Id = parseInt(sessionStorage.getItem('userid') || '0',10);   // if session value is null assigns it to 0, and 10 is to use it as base for the conversion\n    \n    // let Id=this.activeroute.snapshot.params['id'];\n    console.log(\"From UserDetails Component ==> \" +this.Id);\n    this._user.getUserById(this.Id).subscribe(data =>{\n      this.user = data;\n      console.log(data);\n    })\n  }\n}\n","<div class=\"container mt-4\" *ngIf=\"user;\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h2>User Details</h2>\n        </div>\n        <div class=\"card-body\">\n            <!-- <p class=\"card-text\"><strong>User ID:</strong> {{ user.userId }}</p> -->\n            <p class=\"card-text\"><strong>User Name:</strong> {{ user.userName }}</p>\n            <p class=\"card-text\"><strong>Email:</strong> {{ user.email }}</p>\n            <p class=\"card-text\"><strong>Phone Number:</strong> {{ user.phoneNumber }}</p>\n            <p class=\"card-text\"><strong>Status:</strong> {{ user.status }}</p>\n            <p class=\"card-text\"><strong>User Role:</strong> {{ user.userRole }}</p>\n        </div>\n    </div>\n</div>\n<!-- <ng-template #loading>\n    <div class=\"container mt-4\">\n        <p>Loading user details...</p>\n    </div>\n</ng-template> -->"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,aAA0C;IAG1BD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAEzBH,EAAA,CAAAC,cAAA,aAAuB;IAEUD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxEH,EAAA,CAAAC,cAAA,YAAqB;IAAQD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACjEH,EAAA,CAAAC,cAAA,YAAqB;IAAQD,EAAA,CAAAE,MAAA,qBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC9EH,EAAA,CAAAC,cAAA,YAAqB;IAAQD,EAAA,CAAAE,MAAA,eAAO;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACnEH,EAAA,CAAAC,cAAA,YAAqB;IAAQD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAJvBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAC,QAAA,KAAmB;IACvBR,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAE,KAAA,KAAgB;IACTT,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAG,WAAA,KAAsB;IAC5BV,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAI,MAAA,KAAiB;IACdX,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAK,QAAA,KAAmB;;;ADAhF,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,KAAiB,EAASC,WAA0B;IAApD,KAAAD,KAAK,GAALA,KAAK;IAAqB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAE1EC,QAAQA,CAAA;IACN,IAAI,CAACC,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAC,EAAE,CAAC,CAAC,CAAG;IAElE;IACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAE,IAAI,CAACL,EAAE,CAAC;IACvD,IAAI,CAACH,KAAK,CAACS,WAAW,CAAC,IAAI,CAACN,EAAE,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACnB,IAAI,GAAGmB,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;;uBAdWb,oBAAoB,EAAAb,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA7B,EAAA,CAAA2B,iBAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAApBlB,oBAAoB;MAAAmB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXjCtC,EAAA,CAAAwC,UAAA,IAAAC,mCAAA,kBAcM;;;UAduBzC,EAAA,CAAA0C,UAAA,SAAAH,GAAA,CAAAhC,IAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}