{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class UserRegistrationComponent {\n  constructor(form) {\n    this.form = form;\n    this.registrationForm = new FormGroup({\n      userName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required]),\n      status: new FormControl('', [Validators.required]),\n      userRole: new FormControl('', [Validators.required])\n    });\n  }\n  static {\n    this.ɵfac = function UserRegistrationComponent_Factory(t) {\n      return new (t || UserRegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserRegistrationComponent,\n      selectors: [[\"app-user-registration\"]],\n      decls: 34,\n      vars: 2,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"status\"], [\"type\", \"text\", \"id\", \"status\", \"formControlName\", \"status\", 1, \"form-control\"], [\"for\", \"userRole\"], [\"name\", \"userRole\", \"id\", \"userRole\", \"formControlName\", \"userRole\"], [\"value\", \"seller\"], [\"value\", \"customer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function UserRegistrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function UserRegistrationComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"header\");\n          i0.ɵɵtext(3, \"User Registration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n          i0.ɵɵtext(18, \"Phone Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n          i0.ɵɵtext(22, \"Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\", 13);\n          i0.ɵɵtext(26, \"User Role:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"select\", 14)(28, \"option\", 15);\n          i0.ɵɵtext(29, \"Seller\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"option\", 16);\n          i0.ɵɵtext(31, \"Customer\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"button\", 17);\n          i0.ɵɵtext(33, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n          i0.ɵɵadvance(31);\n          i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","UserRegistrationComponent","constructor","form","registrationForm","userName","required","minLength","email","password","phoneNumber","status","userRole","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","UserRegistrationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UserRegistrationComponent_Template_form_ngSubmit_1_listener","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\user-registration\\user-registration.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\user-registration\\user-registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent {\n  constructor(private form:FormBuilder){}\n\n  registrationForm = new FormGroup({\n    userName: new FormControl('',[Validators.required,Validators.minLength(3)]),\n    email : new FormControl('',[Validators.required]),\n    password: new FormControl('',[Validators.required]),\n    phoneNumber: new FormControl('',[Validators.required]),\n    status : new FormControl('',[Validators.required]),\n    userRole:new FormControl('',[Validators.required])\n  })\n\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n      <header>User Registration</header>\n      <div class=\"form-group\">\n        <label for=\"userName\">Username:</label>\n        <input type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" />\n        <!-- <div *ngIf=\"registrationForm.get('userName').invalid && (registrationForm.get('userName').dirty || registrationForm.get('userName').touched)\" class=\"alert alert-danger\">\n          Username is required.\n        </div> -->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" />\n        <!-- <div *ngIf=\"registrationForm.get('email').invalid && (registrationForm.get('email').dirty || registrationForm.get('email').touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"registrationForm.get('email').errors.required\">Email is required.</div>\n          <div *ngIf=\"registrationForm.get('email').errors.email\">Invalid email format.</div>\n        </div> -->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" />\n        <!-- <div *ngIf=\"registrationForm.get('password').invalid && (registrationForm.get('password').dirty || registrationForm.get('password').touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"registrationForm.get('password').errors.required\">Password is required.</div>\n          <div *ngIf=\"registrationForm.get('password').errors.minlength\">Password must be at least 6 characters long.</div>\n        </div> -->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"phoneNumber\">Phone Number:</label>\n        <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phoneNumber\" />\n        <!-- <div *ngIf=\"registrationForm.get('phoneNumber').invalid && (registrationForm.get('phoneNumber').dirty || registrationForm.get('phoneNumber').touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"registrationForm.get('phoneNumber').errors.required\">Phone Number is required.</div>\n          <div *ngIf=\"registrationForm.get('phoneNumber').errors.pattern\">Invalid phone number format.</div>\n        </div> -->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"status\">Status:</label>\n        <input type=\"text\" class=\"form-control\" id=\"status\" formControlName=\"status\" />\n        <!-- <div *ngIf=\"registrationForm.get('status').invalid && (registrationForm.get('status').dirty || registrationForm.get('status').touched)\" class=\"alert alert-danger\">\n          Status is required.\n        </div> -->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"userRole\">User Role:</label>\n        <select name=\"userRole\" id=\"userRole\" formControlName=\"userRole\">\n          <option value=\"seller\">Seller</option>\n          <option value=\"customer\">Customer</option>\n        </select>\n        <!-- <input type=\"text\" class=\"form-control\" id=\"userRole\" formControlName=\"userRole\" /> -->\n        \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registrationForm.invalid\">Register</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}