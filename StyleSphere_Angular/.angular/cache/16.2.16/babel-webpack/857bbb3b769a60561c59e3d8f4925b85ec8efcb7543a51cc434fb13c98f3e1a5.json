{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let UserloginComponent = /*#__PURE__*/(() => {\n  class UserloginComponent {\n    constructor(_service, router) {\n      this._service = _service;\n      this.router = router;\n      this.currentuser = {\n        userId: 0,\n        userName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n        status: '',\n        userRole: ''\n      };\n      this.isLoggedin = 'true';\n      this.Role = '';\n    } // Injects the authentication and router servie\n    onSubmit(form) {\n      let loginuser = form.value; // Extracts the form data.\n      this._service.Login(loginuser).subscribe(res => {\n        if (res.status == 200) {\n          // localstorage ==> to hold unencrypted data\n          localStorage.setItem('logged', this.isLoggedin); // Stores the login status in local storage.\n          // sessionStorage ==> to hold encrypted data\n          sessionStorage.setItem('loginToken', res.body.token); // Stores the token in session storage\n          // printing token on console\n          console.log(\"Token is .......\");\n          console.log(res.body.token);\n          sessionStorage.setItem('userrole', res.body.userRole);\n          this.Role = sessionStorage.getItem(\"userrole\") || '';\n          console.log(this.Role);\n          if (this.Role === 'seller') {\n            alert(\"login Success\");\n            this.router.navigate(['sellerDashboard']);\n          } else this.router.navigate(['customerDashboard']);\n        }\n      }, err => {\n        alert(\"There was a problem logging \" + err.message);\n      });\n    }\n    static {\n      this.ɵfac = function UserloginComponent_Factory(t) {\n        return new (t || UserloginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserloginComponent,\n        selectors: [[\"app-userlogin\"]],\n        decls: 19,\n        vars: 0,\n        consts: [[1, \"text-success\", \"text-center\"], [1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\"]],\n        template: function UserloginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"h1\", 0);\n            i0.ɵɵtext(1, \" LogIn\\n\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"form\", 6, 7);\n            i0.ɵɵlistener(\"ngSubmit\", function UserloginComponent_Template_form_ngSubmit_7_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const _r0 = i0.ɵɵreference(8);\n              return i0.ɵɵresetView(ctx.onSubmit(_r0));\n            });\n            i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n            i0.ɵɵtext(11, \" Email \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 11);\n            i0.ɵɵtext(15, \" Password \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"button\", 13);\n            i0.ɵɵtext(18, \" Login \");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n        }\n      });\n    }\n  }\n  return UserloginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}