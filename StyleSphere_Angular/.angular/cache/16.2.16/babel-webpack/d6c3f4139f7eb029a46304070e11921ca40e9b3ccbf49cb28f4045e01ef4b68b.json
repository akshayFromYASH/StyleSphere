{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class CartService {\n  constructor(http, activeRoute) {\n    this.http = http;\n    this.activeRoute = activeRoute;\n    this.apiUrl = 'http://localhost:5145/Cart';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    };\n  }\n  AddtoWishlist(wishlistItem) {\n    console.log(\"cart :\" + wishlistItem);\n    return this.http.post(this.apiUrl, wishlistItem, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  ProductInWishList(prodid) {\n    console.log(\"prodid\", prodid);\n    return this.http.get(this.apiUrl);\n  }\n  updateWishlist(prodid, product) {\n    console.log(\"prodid: \", prodid);\n    return this.http.put(this.apiUrl, product);\n  }\n  RemoveFromWishlist(id) {\n    return this.http.delete(this.apiUrl + \"/\" + id);\n  }\n  getCartByUserId(userId) {\n    return this.http.get(`${this.apiUrl}?userId=${userId}`);\n  }\n  handleError(error) {\n    let errorMessage = \"\";\n    errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","CartService","constructor","http","activeRoute","apiUrl","httpOptions","headers","AddtoWishlist","wishlistItem","console","log","post","pipe","handleError","ProductInWishList","prodid","get","updateWishlist","product","put","RemoveFromWishlist","id","delete","getCartByUserId","userId","error","errorMessage","status","statusText","alert","i0","ɵɵinject","i1","HttpClient","i2","ActivatedRoute","factory","ɵfac","providedIn"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Services\\cart.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cart } from '../Models/Cart';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Product } from '../Models/Product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  apiUrl: string = 'http://localhost:5145/Cart';\n  userid: number;\n\n  httpOptions = { headers: new HttpHeaders({ 'Content-type': 'application/json' }) };\n\n  constructor(private http: HttpClient, private activeRoute: ActivatedRoute) { }\n\n  AddtoWishlist(wishlistItem: Cart): Observable<any> {\n    console.log(\"cart :\" + wishlistItem);\n    return this.http.post<any>(this.apiUrl, wishlistItem, this.httpOptions).pipe(catchError(this.handleError));\n  }\n\n  ProductInWishList(prodid: number){\n    console.log(\"prodid\",prodid);\n    return this.http.get(this.apiUrl)\n  }\n  updateWishlist(prodid:number,product: Product){\n    console.log(\"prodid: \",prodid);\n    return this.http.put(this.apiUrl,product);\n  }\n  RemoveFromWishlist(id: number): Observable<any> {\n    return this.http.delete(this.apiUrl + \"/\" + id);\n  }\n\n  getCartByUserId(userId: number): Observable<Cart[]> { \n    return this.http.get<Cart[]>(`${this.apiUrl}?userId=${userId}`); \n  }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = \"\";\n    errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n"],"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAIjF,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;;AAMzD,OAAM,MAAOC,WAAW;EAMtBC,YAAoBC,IAAgB,EAAUC,WAA2B;IAArD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IALzD,KAAAC,MAAM,GAAW,4BAA4B;IAG7C,KAAAC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAIT,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;EAEL;EAE7EU,aAAaA,CAACC,YAAkB;IAC9BC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGF,YAAY,CAAC;IACpC,OAAO,IAAI,CAACN,IAAI,CAACS,IAAI,CAAM,IAAI,CAACP,MAAM,EAAEI,YAAY,EAAE,IAAI,CAACH,WAAW,CAAC,CAACO,IAAI,CAACd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAAC;EAC5G;EAEAC,iBAAiBA,CAACC,MAAc;IAC9BN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACK,MAAM,CAAC;IAC5B,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,IAAI,CAACZ,MAAM,CAAC;EACnC;EACAa,cAAcA,CAACF,MAAa,EAACG,OAAgB;IAC3CT,OAAO,CAACC,GAAG,CAAC,UAAU,EAACK,MAAM,CAAC;IAC9B,OAAO,IAAI,CAACb,IAAI,CAACiB,GAAG,CAAC,IAAI,CAACf,MAAM,EAACc,OAAO,CAAC;EAC3C;EACAE,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACnB,IAAI,CAACoB,MAAM,CAAC,IAAI,CAAClB,MAAM,GAAG,GAAG,GAAGiB,EAAE,CAAC;EACjD;EAEAE,eAAeA,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACtB,IAAI,CAACc,GAAG,CAAS,GAAG,IAAI,CAACZ,MAAM,WAAWoB,MAAM,EAAE,CAAC;EACjE;EAEAX,WAAWA,CAACY,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrBA,YAAY,GAAGD,KAAK,CAACE,MAAM,GAAG,IAAI,GAAGF,KAAK,CAACG,UAAU,GAAG,IAAI,GAAGH,KAAK,CAACA,KAAK;IAC1EI,KAAK,CAACH,YAAY,CAAC;IACnB,OAAO3B,UAAU,CAAC2B,YAAY,CAAC;EACjC;;;uBAlCW1B,WAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAXnC,WAAW;MAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}