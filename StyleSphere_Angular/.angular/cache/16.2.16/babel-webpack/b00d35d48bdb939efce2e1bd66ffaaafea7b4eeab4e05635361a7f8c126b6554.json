{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShippingService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5145/Shipping';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    };\n  }\n  addShippingDetails(shippingDetails) {\n    return this.http.post(this.apiUrl, shippingDetails, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  static {\n    this.ɵfac = function ShippingService_Factory(t) {\n      return new (t || ShippingService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ShippingService,\n      factory: ShippingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","ShippingService","constructor","http","apiUrl","httpOptions","headers","addShippingDetails","shippingDetails","post","pipe","handleError","error","errorMessage","status","statusText","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Services\\shipping.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Shipping_Details } from '../Models/Shpping_Details';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingService {\n  apiUrl: string = 'http://localhost:5145/Shipping'; \n  httpOptions = { headers: new HttpHeaders({ 'Content-type': 'application/json' })}; \n  constructor(private http: HttpClient) {} \n  \n  addShippingDetails(shippingDetails: Shipping_Details): Observable<any> { \n    return this.http.post<any>(this.apiUrl, shippingDetails, this.httpOptions).pipe(catchError(this.handleError)); \n  } \n  \n  private handleError(error: any): Observable<never> \n  { let errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error; \n    alert(errorMessage); return throwError(errorMessage); \n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;AAMzD,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAW,gCAAgC;IACjD,KAAAC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAIR,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAC;EAC1C;EAEvCS,kBAAkBA,CAACC,eAAiC;IAClD,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEI,eAAe,EAAE,IAAI,CAACH,WAAW,CAAC,CAACK,IAAI,CAACX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAAC;EAC/G;EAEQA,WAAWA,CAACC,KAAU;IAC5B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM,GAAG,IAAI,GAAGF,KAAK,CAACG,UAAU,GAAG,IAAI,GAAGH,KAAK,CAACA,KAAK;IAC9EI,KAAK,CAACH,YAAY,CAAC;IAAE,OAAOb,UAAU,CAACa,YAAY,CAAC;EACtD;;;uBAZWZ,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}