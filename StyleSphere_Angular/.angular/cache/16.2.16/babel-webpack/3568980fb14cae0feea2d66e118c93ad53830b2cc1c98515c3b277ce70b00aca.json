{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Services/user.service\";\nimport * as i3 from \"@angular/router\";\nexport let UserregisterComponent = /*#__PURE__*/(() => {\n  class UserregisterComponent {\n    constructor(fb, service, router) {\n      this.fb = fb;\n      this.service = service;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.userForm = this.fb.group({\n        userId: [0],\n        userName: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        phoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n        status: ['active'],\n        userRole: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(8)]]\n      });\n    }\n    onSubmit(form) {\n      this.userForm = form;\n      console.log(this.userForm.value);\n      if (this.userForm.valid) {\n        const formValues = this.userForm.value;\n        this.user = {\n          userId: formValues.userId,\n          userName: formValues.userName,\n          email: formValues.email,\n          phoneNumber: formValues.phoneNumber,\n          status: \"active\",\n          userRole: formValues.userRole,\n          password: formValues.password\n        };\n        this.service.UserRegistration(this.user).subscribe(response => {\n          console.log('User Registration successful!', response);\n          this.router.navigate(['userLogin']);\n        }, error => {\n          console.error('Registration failed', error);\n        });\n      }\n    }\n    static {\n      this.ɵfac = function UserregisterComponent_Factory(t) {\n        return new (t || UserregisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserregisterComponent,\n        selectors: [[\"app-userregister\"]],\n        decls: 50,\n        vars: 0,\n        consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"userForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"name\", \"userName\", \"ngModel\", \"\", 1, \"form-control\"], [\"userName\", \"ngModel\"], [\"for\", \"email\"], [\"name\", \"email\", \"ngModel\", \"\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", 1, \"form-control\"], [\"password\", \"ngModel\"], [\"for\", \"phonenumber\"], [\"name\", \"phoneNumber\", \"ngModel\", \"\", 1, \"form-control\"], [\"phonenumber\", \"ngModel\"], [\"for\", \"status\"], [\"name\", \"active\", \"value\", \"active\", \"ngModel\", \"active\", \"readonly\", \"\", 1, \"form-control\"], [\"status\", \"ngModel\"], [\"for\", \"userRole\"], [\"ngModel\", \"\", \"name\", \"userRole\", \"required\", \"\", 1, \"form-control\"], [\"userRole\", \"ngModel\"], [\"value\", \"seller\"], [\"value\", \"customer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n        template: function UserregisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r7 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"p\");\n            i0.ɵɵtext(1, \"userregister works!\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1, 2);\n            i0.ɵɵlistener(\"ngSubmit\", function UserregisterComponent_Template_form_ngSubmit_3_listener() {\n              i0.ɵɵrestoreView(_r7);\n              const _r0 = i0.ɵɵreference(4);\n              return i0.ɵɵresetView(ctx.onSubmit(_r0));\n            });\n            i0.ɵɵelementStart(5, \"div\")(6, \"h1\");\n            i0.ɵɵtext(7, \"User Registration\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n            i0.ɵɵtext(10, \"User Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"br\")(12, \"input\", 5, 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 7);\n            i0.ɵɵtext(16, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"br\")(18, \"input\", 8, 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 10);\n            i0.ɵɵtext(22, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(23, \"br\")(24, \"input\", 11, 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\", 13);\n            i0.ɵɵtext(28, \"Phone Number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(29, \"br\")(30, \"input\", 14, 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 16);\n            i0.ɵɵtext(34, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(35, \"br\")(36, \"input\", 17, 18);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"div\", 3)(39, \"label\", 19);\n            i0.ɵɵtext(40, \"User Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(41, \"br\");\n            i0.ɵɵelementStart(42, \"select\", 20, 21)(44, \"option\", 22);\n            i0.ɵɵtext(45, \"Seller\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(46, \"option\", 23);\n            i0.ɵɵtext(47, \"Customer\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(48, \"button\", 24);\n            i0.ɵɵtext(49, \"Register\");\n            i0.ɵɵelementEnd()()();\n          }\n        }\n      });\n    }\n  }\n  return UserregisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}