{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5145/Product';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    };\n  }\n  ProductAdd(product) {\n    console.log(\"product\" + product);\n    return this.http.post(this.apiUrl, product, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  getAllProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  handleError(error) {\n    let errorMessage = \"\";\n    errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","ProductService","constructor","http","apiUrl","httpOptions","headers","ProductAdd","product","console","log","post","pipe","handleError","getAllProducts","get","error","errorMessage","status","statusText","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Services\\product.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../Models/Product';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  apiUrl: string = 'http://localhost:5145/Product';\n\n  httpOptions = { headers: new HttpHeaders({ 'Content-type': 'application/json' }) };\n\n  constructor(private http: HttpClient) { }\n\n  ProductAdd(product: Product): Observable<any> {\n    console.log(\"product\" + product);\n    return this.http.post<any>(this.apiUrl, product, this.httpOptions).pipe(catchError(this.handleError));\n  }\n\n  getAllProducts(): Observable<any> {\n    return this.http.get<Product>(this.apiUrl);\n  }\n\n  \n  handleError(error: HttpErrorResponse) {\n    let errorMessage = \"\";\n    errorMessage = error.status + '\\n' + error.statusText + '\\n' + error.error;\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n"],"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAGjF,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,MAAM,GAAW,+BAA+B;IAEhD,KAAAC,WAAW,GAAG;MAAEC,OAAO,EAAE,IAAIR,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;IAAC,CAAE;EAE1C;EAExCS,UAAUA,CAACC,OAAgB;IACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,OAAO,CAAC;IAChC,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,MAAM,EAAEI,OAAO,EAAE,IAAI,CAACH,WAAW,CAAC,CAACO,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACvG;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAU,IAAI,CAACX,MAAM,CAAC;EAC5C;EAGAS,WAAWA,CAACG,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrBA,YAAY,GAAGD,KAAK,CAACE,MAAM,GAAG,IAAI,GAAGF,KAAK,CAACG,UAAU,GAAG,IAAI,GAAGH,KAAK,CAACA,KAAK;IAC1EI,KAAK,CAACH,YAAY,CAAC;IACnB,OAAOjB,UAAU,CAACiB,YAAY,CAAC;EACjC;;;uBAtBWhB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdvB,cAAc;MAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}