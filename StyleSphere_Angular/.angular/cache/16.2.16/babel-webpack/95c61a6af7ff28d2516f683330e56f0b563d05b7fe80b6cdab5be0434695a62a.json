{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// Interceptor ==> - Tools for handling and manipulating HTTP requests and responses.\n// - They allow you to define custom logic that can be executed before the request is sent to the server or after the response is received.\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor() {}\n    // intercept method is called for every HTTP request.\n    intercept(request, next) {\n      const token = sessionStorage.getItem('loginToken'); // Get JWT from sessionStorage\n      // request object is immutable hence we create clone it to modify it\n      if (token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      return next.handle(request); // passing cloned request with token to the next handler\n    }\n\n    static {\n      this.ɵfac = function AuthInterceptor_Factory(t) {\n        return new (t || AuthInterceptor)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthInterceptor,\n        factory: AuthInterceptor.ɵfac\n      });\n    }\n  }\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}