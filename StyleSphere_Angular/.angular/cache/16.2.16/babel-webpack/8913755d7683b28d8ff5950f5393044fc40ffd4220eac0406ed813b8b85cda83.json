{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UserRegistrationComponent {\n  constructor(_service, Route) {\n    this._service = _service;\n    this.Route = Route;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this._service.UserRegistration(this.user).subscribe({\n        next: () => {\n          alert(\"User Registered Successfully\");\n          this.Route.navigate(['userLogin']);\n        },\n        error: () => {\n          alert(\"User Registration Failed\");\n        }\n      });\n    } else {\n      alert(\"Invalid user Information\");\n    }\n  }\n  static {\n    this.ɵfac = function UserRegistrationComponent_Factory(t) {\n      return new (t || UserRegistrationComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserRegistrationComponent,\n      selectors: [[\"app-user-registration\"]],\n      decls: 36,\n      vars: 7,\n      consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"user\", \"ngForm\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"type\", \"text\", \"id\", \"status\", \"name\", \"status\", \"readonly\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"userRole\"], [\"name\", \"userRole\", \"id\", \"userRole\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"seller\"], [\"value\", \"customer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function UserRegistrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UserRegistrationComponent_Template_form_ngSubmit_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(ctx.onSubmit(_r0));\n          });\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"span\");\n          i0.ɵɵtext(5, \"User Registration\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.registrationForm.userName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n          i0.ɵɵtext(12, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.registrationForm.email = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 9);\n          i0.ɵɵtext(16, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"input\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.registrationForm.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 11);\n          i0.ɵɵtext(20, \"Phone Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_input_ngModelChange_21_listener($event) {\n            return ctx.registrationForm.phoneNumber = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 13);\n          i0.ɵɵtext(24, \"Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"input\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_input_ngModelChange_25_listener($event) {\n            return ctx.registrationForm.status = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 15);\n          i0.ɵɵtext(28, \"User Role:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"select\", 16);\n          i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationComponent_Template_select_ngModelChange_29_listener($event) {\n            return ctx.registrationForm.userRole = $event;\n          });\n          i0.ɵɵelementStart(30, \"option\", 17);\n          i0.ɵɵtext(31, \"seller\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"option\", 18);\n          i0.ɵɵtext(33, \"customer\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(34, \"button\", 19);\n          i0.ɵɵtext(35, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(2);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.userName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.phoneNumber);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.status);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationForm.userRole);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["UserRegistrationComponent","constructor","_service","Route","onSubmit","form","valid","UserRegistration","user","subscribe","next","alert","navigate","error","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","selectors","decls","vars","consts","template","UserRegistrationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UserRegistrationComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","UserRegistrationComponent_Template_input_ngModelChange_9_listener","$event","registrationForm","userName","UserRegistrationComponent_Template_input_ngModelChange_13_listener","email","UserRegistrationComponent_Template_input_ngModelChange_17_listener","password","UserRegistrationComponent_Template_input_ngModelChange_21_listener","phoneNumber","UserRegistrationComponent_Template_input_ngModelChange_25_listener","status","UserRegistrationComponent_Template_select_ngModelChange_29_listener","userRole","ɵɵadvance","ɵɵproperty","invalid"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\user-registration\\user-registration.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\user-registration\\user-registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../Models/User';\nimport { UserService } from '../Services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent {\n\n  user: User;\n\n  constructor(private _service: UserService, private Route: Router) {}\n\n  onSubmit(form: any): void {\n    if (form.valid) {\n      this._service.UserRegistration(this.user).subscribe({\n        next: () => {\n          alert(\"User Registered Successfully\");\n          this.Route.navigate(['userLogin']);\n        },\n        error: () => {\n          alert(\"User Registration Failed\");\n        }\n      });\n    } else {\n      alert(\"Invalid user Information\");\n    }\n  }\n}\n","<div class=\"container\">\n  <form #user=\"ngForm\" (ngSubmit)=\"onSubmit(user)\">\n    <div class=\"col text-center p-2 mb-3 bg-light\">\n      <span>User Registration</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"userName\">Username:</label>\n      <input type=\"text\" class=\"form-control\" id=\"userName\" name=\"userName\" [(ngModel)]=\"registrationForm.userName\" />\n      <!-- <div *ngIf=\"!user.controls.userName.valid && user.controls.userName.dirty\" class=\"alert alert-danger\">\n        Username is required.\n      </div> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"registrationForm.email\" />\n      <!-- <div *ngIf=\"!user.controls.email.valid && user.controls.email.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"user.controls.email.errors.required\">Email is required.</div>\n        <div *ngIf=\"user.controls.email.errors.email\">Invalid email format.</div>\n      </div> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"registrationForm.password\" />\n      <!-- <div *ngIf=\"!user.controls.password.valid && user.controls.password.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"user.controls.password.errors.required\">Password is required.</div>\n        <div *ngIf=\"user.controls.password.errors.minlength\">Password must be at least 6 characters long.</div>\n      </div> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phoneNumber\">Phone Number:</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" name=\"phoneNumber\" [(ngModel)]=\"registrationForm.phoneNumber\" />\n      <!-- <div *ngIf=\"!user.controls.phoneNumber.valid && user.controls.phoneNumber.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"user.controls.phoneNumber.errors.required\">Phone Number is required.</div>\n        <div *ngIf=\"user.controls.phoneNumber.errors.pattern\">Invalid phone number format.</div>\n      </div> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"status\">Status:</label>\n      <input type=\"text\" class=\"form-control\" id=\"status\" name=\"status\" [(ngModel)]=\"registrationForm.status\" readonly/>\n      <!-- <div *ngIf=\"!user.controls.status.valid && user.controls.status.dirty\" class=\"alert alert-danger\">\n        Status is required.\n      </div> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"userRole\">User Role:</label>\n      <select name=\"userRole\" id=\"userRole\" [(ngModel)]=\"registrationForm.userRole\">\n        <option value=\"seller\">seller</option>\n        <option value=\"customer\">customer</option>\n      </select>\n      <!-- <input type=\"text\" class=\"form-control\" id=\"userRole\" [(ngModel)]=\"registrationForm.userRole\" /> -->\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"user.invalid\">Register</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}