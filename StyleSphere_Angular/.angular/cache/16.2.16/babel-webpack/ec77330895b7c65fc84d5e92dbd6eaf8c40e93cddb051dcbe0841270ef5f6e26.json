{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Services/user.service\";\nimport * as i3 from \"@angular/router\";\nexport class UserregisterComponent {\n  constructor(fb, service, router) {\n    this.fb = fb;\n    this.service = service;\n    this.router = router;\n    this.isLoading = false;\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n  }\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      userId: [0],\n      userName: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n      status: ['', Validators.required],\n      userRole: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  isFieldInvalid(field) {\n    const control = this.registrationForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      this.isLoading = true;\n      const formValues = this.registrationForm.value;\n      this.user = {\n        userId: formValues.userId,\n        userName: formValues.userName,\n        email: formValues.email,\n        phoneNumber: formValues.phoneNumber,\n        status: formValues.status,\n        userRole: formValues.userRole,\n        password: formValues.password\n      };\n      this.service.UserRegistration(this.user).subscribe(response => {\n        console.log('Registration successful', response);\n        this.isLoading = false;\n        this.router.navigate(['userLogin']);\n      }, error => {\n        console.error('Registration failed', error);\n        this.isLoading = false;\n      });\n    }\n  }\n  static {\n    this.ɵfac = function UserregisterComponent_Factory(t) {\n      return new (t || UserregisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserregisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 46,\n      vars: 0,\n      consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"user\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"name\", \"userName\", \"ngModel\", \"userName\", 1, \"form-control\"], [\"userName\", \"ngModel\"], [\"for\", \"email\"], [\"name\", \"email\", \"ngModel\", \"email\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"for\", \"password\"], [\"name\", \"password\", \"ngModel\", \"password\", 1, \"form-control\"], [\"password\", \"ngModel\"], [\"for\", \"phonenumber\"], [\"name\", \"phoneNumber\", \"ngModel\", \"phonenumber\", 1, \"form-control\"], [\"phonenumber\", \"ngModel\"], [\"for\", \"status\"], [\"name\", \"status\", \"ngModel\", \"status\", 1, \"form-control\"], [\"status\", \"ngModel\"], [\"name\", \"userrole\", \"ngModel\", \"userrole\", 1, \"form-control\"], [\"userrole\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function UserregisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"userregister works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UserregisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\")(6, \"h1\");\n          i0.ɵɵtext(7, \"User Registration\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n          i0.ɵɵtext(10, \"User Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"br\")(12, \"input\", 5, 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 7);\n          i0.ɵɵtext(16, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\")(18, \"input\", 8, 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 10);\n          i0.ɵɵtext(22, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"br\")(24, \"input\", 11, 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\", 13);\n          i0.ɵɵtext(28, \"Phone Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"br\")(30, \"input\", 14, 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 16);\n          i0.ɵɵtext(34, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"br\")(36, \"input\", 17, 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 3)(39, \"label\", 16);\n          i0.ɵɵtext(40, \"User Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"br\")(42, \"input\", 19, 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"button\", 21);\n          i0.ɵɵtext(45, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","UserregisterComponent","constructor","fb","service","router","isLoading","showPassword","showConfirmPassword","ngOnInit","registrationForm","group","userId","userName","required","minLength","email","phoneNumber","maxLength","status","userRole","password","isFieldInvalid","field","control","get","invalid","dirty","touched","onSubmit","valid","formValues","value","user","UserRegistration","subscribe","response","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","Router","selectors","decls","vars","consts","template","UserregisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserregisterComponent_Template_form_ngSubmit_3_listener","ɵɵelement"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\userregister\\userregister.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\userregister\\userregister.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { User } from '../Models/User';\n\n\n// @Component({\n//   selector: 'app-userregister',\n//   templateUrl: './userregister.component.html',\n//   styleUrls: ['./userregister.component.css']\n// })\n// export class UserregisterComponent {\n//   user:User;\n\n//   ngOnInit(){\n//     this.user={\n//       \"userId\": 0,\n//   \"userName\": \"string\",\n//   \"email\": \"string\",\n//   \"password\": \"string\",\n//   \"phoneNumber\": \"string\",\n//   \"status\": \"string\",\n//   \"userRole\": \"string\"\n//     }\n//     console.log(this.user);\n//   }\n// }\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../Models/User';\nimport { AuthService } from '../Services/auth.service';\nimport { UserService } from '../Services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './userregister.component.html',\n  styleUrls: ['./userregister.component.css']\n})\nexport class UserregisterComponent implements OnInit {\n  registrationForm: FormGroup;\n  user: User;\n  isLoading = false;\n  showPassword = false;\n  showConfirmPassword = false;\n\n  constructor(private fb: FormBuilder, private service: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group({\n      userId: [0],\n      userName: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n      status: ['', Validators.required],\n      userRole: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    })\n  }\n\n  isFieldInvalid(field: string): boolean {\n    const control = this.registrationForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      this.isLoading = true;\n      const formValues = this.registrationForm.value;\n      this.user = {\n        userId:formValues.userId,\n        userName: formValues.userName,\n        email: formValues.email,\n        phoneNumber: formValues.phoneNumber,\n        status: formValues.status,\n        userRole: formValues.userRole,\n        password: formValues.password\n      };\n\n      this.service.UserRegistration(this.user).subscribe(\n        response => {\n          console.log('Registration successful', response);\n          this.isLoading = false;\n          this.router.navigate(['userLogin']);\n        },\n        error => {\n          console.error('Registration failed', error);\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n}\n","<p>userregister works!</p>\n\n<div class=\"container\">\n    <form #user=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <div>\n            <h1>User Registration</h1>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"userName\">User Name</label><br>\n            <input #userName=\"ngModel\"  name=\"userName\" class=\"form-control\" ngModel=\"userName\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label><br>\n            <input #email=\"ngModel\"  name=\"email\" class=\"form-control\" ngModel=\"email\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label><br>\n            <input #password=\"ngModel\"  name=\"password\" class=\"form-control\" ngModel=\"password\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"phonenumber\">Phone Number</label><br>\n            <input #phonenumber=\"ngModel\"  name=\"phoneNumber\" class=\"form-control\" ngModel=\"phonenumber\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"status\">Status</label><br>\n            <input #status=\"ngModel\"  name=\"status\" class=\"form-control\" ngModel=\"status\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"status\">User Role</label><br>\n            <input #userrole=\"ngModel\"  name=\"userrole\" class=\"form-control\" ngModel=\"userrole\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}