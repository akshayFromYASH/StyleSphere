{"ast":null,"code":"import { Payment } from 'src/app/Models/Payment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/payment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class PaymentPageComponent {\n  constructor(_payment, route, router) {\n    this._payment = _payment;\n    this.route = route;\n    this.router = router;\n    this.payment = new Payment();\n  }\n  ngOnInit() {\n    // this.productId = this.route.snapshot.paramMap.get('prodid');\n    this.payment.prodId = this.productId;\n    this.payment.orderDate = new Date().toISOString().split('T')[0];\n  }\n  makePayment() {\n    this._payment.makePayment(this.payment).subscribe(response => {\n      console.log('Payment successful', response);\n      alert('Payment successful!');\n      // this.router.navigate(['/orderDetails'],this.productId);\n    }, error => {\n      console.error('Payment error', error);\n      alert('Payment failed. Please try again.');\n    });\n  }\n  static {\n    this.ɵfac = function PaymentPageComponent_Factory(t) {\n      return new (t || PaymentPageComponent)(i0.ɵɵdirectiveInject(i1.PaymentService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaymentPageComponent,\n      selectors: [[\"app-payment-page\"]],\n      decls: 34,\n      vars: 5,\n      consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"paymentMethod\"], [\"id\", \"paymentMethod\", \"name\", \"paymentMethod\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Credit Card\"], [\"value\", \"Debit Card\"], [\"value\", \"Net Banking\"], [\"value\", \"UPI\"], [\"for\", \"totalAmount\"], [\"type\", \"number\", \"id\", \"totalAmount\", \"name\", \"totalAmount\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"shippingAmount\"], [\"type\", \"number\", \"id\", \"shippingAmount\", \"name\", \"shippingAmount\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"discountAmount\"], [\"type\", \"number\", \"id\", \"discountAmount\", \"name\", \"discountAmount\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"netAmount\"], [\"type\", \"number\", \"id\", \"netAmount\", \"name\", \"netAmount\", \"readonly\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"]],\n      template: function PaymentPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Payment Page\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n          i0.ɵɵtext(6, \"Payment Method\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function PaymentPageComponent_Template_select_ngModelChange_7_listener($event) {\n            return ctx.payment.payment_Method = $event;\n          });\n          i0.ɵɵelementStart(8, \"option\", 4);\n          i0.ɵɵtext(9, \"Credit Card\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"option\", 5);\n          i0.ɵɵtext(11, \"Debit Card\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"option\", 6);\n          i0.ɵɵtext(13, \"Net Banking\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"option\", 7);\n          i0.ɵɵtext(15, \"UPI\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 8);\n          i0.ɵɵtext(18, \"Total Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function PaymentPageComponent_Template_input_ngModelChange_19_listener($event) {\n            return ctx.payment.total_Amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 10);\n          i0.ɵɵtext(22, \"Shipping Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function PaymentPageComponent_Template_input_ngModelChange_23_listener($event) {\n            return ctx.payment.shipping_Amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 12);\n          i0.ɵɵtext(26, \"Discount Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function PaymentPageComponent_Template_input_ngModelChange_27_listener($event) {\n            return ctx.payment.discount_Amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 14);\n          i0.ɵɵtext(30, \"Net Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"input\", 15);\n          i0.ɵɵlistener(\"ngModelChange\", function PaymentPageComponent_Template_input_ngModelChange_31_listener($event) {\n            return ctx.payment.net_Amount = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(32, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function PaymentPageComponent_Template_button_click_32_listener() {\n            return ctx.makePayment();\n          });\n          i0.ɵɵtext(33, \"Pay Now\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.payment.payment_Method);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngModel\", ctx.payment.total_Amount);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.payment.shipping_Amount);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.payment.discount_Amount);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.payment.net_Amount);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Payment","PaymentPageComponent","constructor","_payment","route","router","payment","ngOnInit","prodId","productId","orderDate","Date","toISOString","split","makePayment","subscribe","response","console","log","alert","error","i0","ɵɵdirectiveInject","i1","PaymentService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","PaymentPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PaymentPageComponent_Template_select_ngModelChange_7_listener","$event","payment_Method","PaymentPageComponent_Template_input_ngModelChange_19_listener","total_Amount","PaymentPageComponent_Template_input_ngModelChange_23_listener","shipping_Amount","PaymentPageComponent_Template_input_ngModelChange_27_listener","discount_Amount","PaymentPageComponent_Template_input_ngModelChange_31_listener","net_Amount","PaymentPageComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Customer\\payment-page\\payment-page.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Customer\\payment-page\\payment-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Payment } from 'src/app/Models/Payment';\nimport { PaymentService } from 'src/app/Services/payment.service';\n\n@Component({\n  selector: 'app-payment-page',\n  templateUrl: './payment-page.component.html',\n  styleUrls: ['./payment-page.component.css']\n})\nexport class PaymentPageComponent implements OnInit {\n  payment: Payment = new Payment();\n  productId: number;\n\n  constructor(\n    private _payment: PaymentService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // this.productId = this.route.snapshot.paramMap.get('prodid');\n    this.payment.prodId = this.productId;\n    this.payment.orderDate = new Date().toISOString().split('T')[0];\n  }\n\n  makePayment() {\n    this._payment.makePayment(this.payment).subscribe(\n      response => {\n        console.log('Payment successful', response);\n        alert('Payment successful!');\n        // this.router.navigate(['/orderDetails'],this.productId);\n      },\n      error => {\n        console.error('Payment error', error);\n        alert('Payment failed. Please try again.');\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Payment Page</h2>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"paymentMethod\">Payment Method</label>\n        <select id=\"paymentMethod\" class=\"form-control\" [(ngModel)]=\"payment.payment_Method\" name=\"paymentMethod\">\n          <option value=\"Credit Card\">Credit Card</option>\n          <option value=\"Debit Card\">Debit Card</option>\n          <option value=\"Net Banking\">Net Banking</option>\n          <option value=\"UPI\">UPI</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"totalAmount\">Total Amount</label>\n        <input type=\"number\" id=\"totalAmount\" class=\"form-control\" [(ngModel)]=\"payment.total_Amount\" name=\"totalAmount\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"shippingAmount\">Shipping Amount</label>\n        <input type=\"number\" id=\"shippingAmount\" class=\"form-control\" [(ngModel)]=\"payment.shipping_Amount\" name=\"shippingAmount\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"discountAmount\">Discount Amount</label>\n        <input type=\"number\" id=\"discountAmount\" class=\"form-control\" [(ngModel)]=\"payment.discount_Amount\" name=\"discountAmount\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"netAmount\">Net Amount</label>\n        <input type=\"number\" id=\"netAmount\" class=\"form-control\" [(ngModel)]=\"payment.net_Amount\" name=\"netAmount\" readonly>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary mt-3\" (click)=\"makePayment()\">Pay Now</button>\n    </form>\n  </div>\n  "],"mappings":"AAEA,SAASA,OAAO,QAAQ,wBAAwB;;;;;AAQhD,OAAM,MAAOC,oBAAoB;EAI/BC,YACUC,QAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAY,IAAIN,OAAO,EAAE;EAO5B;EAEJO,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,OAAO,CAACE,MAAM,GAAG,IAAI,CAACC,SAAS;IACpC,IAAI,CAACH,OAAO,CAACI,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjE;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACX,QAAQ,CAACW,WAAW,CAAC,IAAI,CAACR,OAAO,CAAC,CAACS,SAAS,CAC/CC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3CG,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCD,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC,CACF;EACH;;;uBA5BWlB,oBAAoB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;IAAA;EAAA;;;YAApB1B,oBAAoB;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVjCb,EAAA,CAAAe,cAAA,aAAuB;UACff,EAAA,CAAAgB,MAAA,mBAAY;UAAAhB,EAAA,CAAAiB,YAAA,EAAK;UACrBjB,EAAA,CAAAe,cAAA,WAAM;UAEyBf,EAAA,CAAAgB,MAAA,qBAAc;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UACjDjB,EAAA,CAAAe,cAAA,gBAA0G;UAA1Df,EAAA,CAAAkB,UAAA,2BAAAC,8DAAAC,MAAA;YAAA,OAAAN,GAAA,CAAA7B,OAAA,CAAAoC,cAAA,GAAAD,MAAA;UAAA,EAAoC;UAClFpB,EAAA,CAAAe,cAAA,gBAA4B;UAAAf,EAAA,CAAAgB,MAAA,kBAAW;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;UAChDjB,EAAA,CAAAe,cAAA,iBAA2B;UAAAf,EAAA,CAAAgB,MAAA,kBAAU;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;UAC9CjB,EAAA,CAAAe,cAAA,iBAA4B;UAAAf,EAAA,CAAAgB,MAAA,mBAAW;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;UAChDjB,EAAA,CAAAe,cAAA,iBAAoB;UAAAf,EAAA,CAAAgB,MAAA,WAAG;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;UAGpCjB,EAAA,CAAAe,cAAA,cAAwB;UACGf,EAAA,CAAAgB,MAAA,oBAAY;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UAC7CjB,EAAA,CAAAe,cAAA,gBAA0H;UAA/Df,EAAA,CAAAkB,UAAA,2BAAAI,8DAAAF,MAAA;YAAA,OAAAN,GAAA,CAAA7B,OAAA,CAAAsC,YAAA,GAAAH,MAAA;UAAA,EAAkC;UAA7FpB,EAAA,CAAAiB,YAAA,EAA0H;UAE5HjB,EAAA,CAAAe,cAAA,cAAwB;UACMf,EAAA,CAAAgB,MAAA,uBAAe;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UACnDjB,EAAA,CAAAe,cAAA,iBAAmI;UAArEf,EAAA,CAAAkB,UAAA,2BAAAM,8DAAAJ,MAAA;YAAA,OAAAN,GAAA,CAAA7B,OAAA,CAAAwC,eAAA,GAAAL,MAAA;UAAA,EAAqC;UAAnGpB,EAAA,CAAAiB,YAAA,EAAmI;UAErIjB,EAAA,CAAAe,cAAA,cAAwB;UACMf,EAAA,CAAAgB,MAAA,uBAAe;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UACnDjB,EAAA,CAAAe,cAAA,iBAAmI;UAArEf,EAAA,CAAAkB,UAAA,2BAAAQ,8DAAAN,MAAA;YAAA,OAAAN,GAAA,CAAA7B,OAAA,CAAA0C,eAAA,GAAAP,MAAA;UAAA,EAAqC;UAAnGpB,EAAA,CAAAiB,YAAA,EAAmI;UAErIjB,EAAA,CAAAe,cAAA,cAAwB;UACCf,EAAA,CAAAgB,MAAA,kBAAU;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UACzCjB,EAAA,CAAAe,cAAA,iBAAoH;UAA3Df,EAAA,CAAAkB,UAAA,2BAAAU,8DAAAR,MAAA;YAAA,OAAAN,GAAA,CAAA7B,OAAA,CAAA4C,UAAA,GAAAT,MAAA;UAAA,EAAgC;UAAzFpB,EAAA,CAAAiB,YAAA,EAAoH;UAEtHjB,EAAA,CAAAe,cAAA,kBAA2E;UAAxBf,EAAA,CAAAkB,UAAA,mBAAAY,uDAAA;YAAA,OAAShB,GAAA,CAAArB,WAAA,EAAa;UAAA,EAAC;UAACO,EAAA,CAAAgB,MAAA,eAAO;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;UAvBzCjB,EAAA,CAAA+B,SAAA,GAAoC;UAApC/B,EAAA,CAAAgC,UAAA,YAAAlB,GAAA,CAAA7B,OAAA,CAAAoC,cAAA,CAAoC;UASzBrB,EAAA,CAAA+B,SAAA,IAAkC;UAAlC/B,EAAA,CAAAgC,UAAA,YAAAlB,GAAA,CAAA7B,OAAA,CAAAsC,YAAA,CAAkC;UAI/BvB,EAAA,CAAA+B,SAAA,GAAqC;UAArC/B,EAAA,CAAAgC,UAAA,YAAAlB,GAAA,CAAA7B,OAAA,CAAAwC,eAAA,CAAqC;UAIrCzB,EAAA,CAAA+B,SAAA,GAAqC;UAArC/B,EAAA,CAAAgC,UAAA,YAAAlB,GAAA,CAAA7B,OAAA,CAAA0C,eAAA,CAAqC;UAI1C3B,EAAA,CAAA+B,SAAA,GAAgC;UAAhC/B,EAAA,CAAAgC,UAAA,YAAAlB,GAAA,CAAA7B,OAAA,CAAA4C,UAAA,CAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}