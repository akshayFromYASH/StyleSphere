{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/product.service\";\nimport * as i3 from \"@angular/common\";\nfunction MyproductsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"h5\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 7)(9, \"small\", 8);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\", 7)(12, \"small\", 8);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"p\", 7)(15, \"small\", 8);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 9)(18, \"div\", 10)(19, \"button\", 11);\n    i0.ɵɵtext(20, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"a\", 12);\n    i0.ɵɵtext(22, \"Edit Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"small\", 8);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", product_r1.prodName);\n    i0.ɵɵproperty(\"src\", product_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(product_r1.prodName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Availability: \", product_r1.availaibility, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Price: \\u20B9\", product_r1.price, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Stock Quantity: \", product_r1.stock_Quantity, \"\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"Category: \", product_r1.categoryId, \"\");\n  }\n}\nexport class MyproductsComponent {\n  constructor(activeRoute, service, router) {\n    this.activeRoute = activeRoute;\n    this.service = service;\n    this.router = router;\n    this.products = [];\n  }\n  ngOnInit() {\n    this.userid = parseInt(sessionStorage.getItem('userid') || '0', 10);\n    console.log(\"UserId from session storage: \" + this.userid);\n    this.loadProductsByUserId();\n  }\n  loadProductsByUserId() {\n    this.service.getProductsByUserId(this.userid).subscribe(data => {\n      this.products = data;\n      console.log(\"Products loaded: \", this.products);\n    }, error => {\n      console.error('Error fetching products', error);\n    });\n  }\n  static {\n    this.ɵfac = function MyproductsComponent_Factory(t) {\n      return new (t || MyproductsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MyproductsComponent,\n      selectors: [[\"app-myproducts\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"container\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [1, \"card\", \"mb-4\", \"shadow-sm\"], [1, \"card-img-top\", 3, \"src\", \"alt\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"text-muted\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\"], [\"routerLink\", \"userEdit\"]],\n      template: function MyproductsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"My Products\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, MyproductsComponent_div_3_Template, 25, 8, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        }\n      },\n      dependencies: [i3.NgForOf, i1.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","product_r1","prodName","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","description","ɵɵtextInterpolate1","availaibility","price","stock_Quantity","categoryId","MyproductsComponent","constructor","activeRoute","service","router","products","ngOnInit","userid","parseInt","sessionStorage","getItem","console","log","loadProductsByUserId","getProductsByUserId","subscribe","data","error","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ProductService","Router","selectors","decls","vars","consts","template","MyproductsComponent_Template","rf","ctx","ɵɵtemplate","MyproductsComponent_div_3_Template"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Seller\\myproducts\\myproducts.component.ts","D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\Seller\\myproducts\\myproducts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/Services/product.service';\nimport { Product } from 'src/app/Models/Product';\n\n@Component({\n  selector: 'app-myproducts',\n  templateUrl: './myproducts.component.html',\n  styleUrls: ['./myproducts.component.css']\n})\nexport class MyproductsComponent implements OnInit {\n  products: Product[] = [];\n  userid: number;\n\n  constructor(private activeRoute: ActivatedRoute, private service: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userid = parseInt(sessionStorage.getItem('userid') || '0', 10);\n    console.log(\"UserId from session storage: \" + this.userid);\n    this.loadProductsByUserId();\n  }\n\n  loadProductsByUserId(): void {\n    this.service.getProductsByUserId(this.userid).subscribe(\n      data => {\n        this.products = data;\n        console.log(\"Products loaded: \", this.products);\n      },\n      error => {\n        console.error('Error fetching products', error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>My Products</h2>\n    <div class=\"col-md-4\" *ngFor=\"let product of products\">\n        <div class=\"card mb-4 shadow-sm\">\n          <img [src]=\"product.image\" class=\"card-img-top\" alt=\"{{ product.prodName }}\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ product.prodName }}</h5>\n            <p class=\"card-text\">{{ product.description }}</p>\n            <p class=\"card-text\"><small class=\"text-muted\">Availability: {{ product.availaibility }}</small></p>\n            <p class=\"card-text\"><small class=\"text-muted\">Price: ₹{{ product.price }}</small></p>\n            <p class=\"card-text\"><small class=\"text-muted\">Stock Quantity: {{ product.stock_Quantity }}</small></p>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">View</button>\n                <!-- <div *ngIf=\"role==='seller' && \"> -->\n                  <a routerLink=\"userEdit\">Edit Details</a>\n                <!-- </div> -->\n              </div>\n              <small class=\"text-muted\">Category: {{ product.categoryId }}</small>\n            </div>\n          </div>\n        </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}