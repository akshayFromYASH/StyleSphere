{"ast":null,"code":"// Guard ==> Essential tools for controlling access to routes and ensuring certain conditions are met before navigating to a particular route\n// - Used to protect routes from unauthorized access \n// CanActivate Guard ==> Ensures that only authenticated users can access specific routes.\n// CanActivateChild Guard ==> Checks if a user has the required permissions to access child routes.\n// Resolve ==> Preloads data for routes.\n// CanDeactivate ==> Ensures users can safely navigate away from routes.\n// CanLoad ==> Controls lazy loading of modules.\nexport const authGuard = (route, state) => {\n  let userstatus = localStorage.getItem(\"logged\");\n  console.log(\"userstatus + \" + userstatus);\n  if (userstatus == 'true') {\n    return true;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"names":["authGuard","route","state","userstatus","localStorage","getItem","console","log"],"sources":["D:\\StyleShpere\\StyleSphere_Angular\\src\\app\\auth.guard.ts"],"sourcesContent":["// Guard ==> Essential tools for controlling access to routes and ensuring certain conditions are met before navigating to a particular route\n// - Used to protect routes from unauthorized access \n\nimport { CanActivateFn } from '@angular/router';\n\n// CanActivate Guard ==> Ensures that only authenticated users can access specific routes.\n// CanActivateChild Guard ==> Checks if a user has the required permissions to access child routes.\n// Resolve ==> Preloads data for routes.\n// CanDeactivate ==> Ensures users can safely navigate away from routes.\n// CanLoad ==> Controls lazy loading of modules.\nexport const authGuard: CanActivateFn = (route, state) => {\n  let userstatus = localStorage.getItem(\"logged\");\n  console.log(\"userstatus + \" + userstatus);\n  if(userstatus == 'true'){\n    return true;\n  }\n  else{\n    return false\n  }\n};\n"],"mappings":"AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,IAAIC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC/CC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGJ,UAAU,CAAC;EACzC,IAAGA,UAAU,IAAI,MAAM,EAAC;IACtB,OAAO,IAAI;GACZ,MACG;IACF,OAAO,KAAK;;AAEhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}